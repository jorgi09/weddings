{"ts":1357747039793,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\n * @file Routers for application\n * @author Micha≈Ç Kamil Przybysz\n */\n\ndefine([\n  'backbone',\n  'handlebars',\n  'application/view/modal',\n  'text!templates/guests/guest.html'\n], function (Backbone, Handlebars, Modal, template) {\n    console.log('File: view/guest');\n    var Guest = Backbone.View.extend({\n        tagName: 'tr',\n        className: 'guest-item',\n        template: Handlebars.compile(template),\n        editClass: 'edited',\n        inputs: {\n            guest : {\n                first: 'guest-name-first',\n                second: 'guest-name-second'\n            },\n            accompanying: {\n                first: 'accompanying-name-first',\n                second: 'accompanying-name-second'\n            }\n        },\n        events: {\n            'dblclick': 'edit',\n            'click .dropdown-menu li': 'confirmation',\n            'click .delete': 'deleteItem'\n        },\n        initialize: function () {\n            console.log('view', 'Guest:initialize', arguments);\n            this.model.on('destroy',this.remove, this);\n            this.model.on('change',this.render, this);\n            return this;\n        },\n        render: function () {\n            console.log('view', 'Guest:render', arguments);\n            this.$el.html(this.template(this.model.toJSON()));\n            return this;\n        },\n        edit: function () {\n            console.log('view', 'Guest:edit', arguments);\n            if(!this.isConfirmed()) {\n                this.$el.toggleClass(this.editClass, this.isEdit);\n                if(!this.isEdit()) {\n                    this.save();\n                }\n            }\n        },\n        isConfirmed: function () {\n            console.log('view', 'Guest:isConfirmed', arguments);\n            return this.model.get('response');\n        },\n        isEdit: function () {\n            console.log('view', 'Guest:isEdit', arguments);\n            return this.$el.hasClass(this.editClass);\n        },\n        save: function () {\n            console.log('view', 'Guest:save', arguments);\n            this.model.save(this.getInputs());\n        },\n        getInputs: function () {\n            console.log('view', 'Guest:getInputs', arguments);\n            var inputs = this.$el.find('input'),\n                guestFirst = inputs.filter('[name=' + this.inputs.guest.first + ']').val().trim(),\n                guestSecond = inputs.filter('[name=' + this.inputs.guest.second + ']').val().trim(),\n                accompanyingFirst = inputs.filter('[name=' + this.inputs.accompanying.first + ']').val().trim(),\n                accompanyingSecond = inputs.filter('[name=' + this.inputs.accompanying.second + ']').val().trim(),\n                chenges = {};\n            \n            if (guestFirst && guestSecond) {\n                chenges.name = {\n                    first: guestFirst,\n                    second: guestSecond\n                };\n            }\n            if (accompanyingFirst && accompanyingSecond) {\n                chenges.accompanying = {\n                    first: accompanyingFirst,\n                    second: accompanyingSecond\n                };\n            }\n            return chenges;\n        },\n        confirmation: function (e) {\n            console.log('view', 'Guest:confirmation', arguments);\n            var value = $(e.target).text();\n            if (value.toLowerCase() === 'yes') {\n                this.model.save({\n                    confirmed: true,\n                    response: true\n                });\n            } else {\n                this.model.save({\n                    confirmed: false,\n                    response: true\n                });\n            }\n        },\n        deleteItem: function () {\n            console.log('view', 'Guest:deleteItem', arguments);\n            var question = new Modal({title: 'Warning', body: 'Are you sure you want to delete?'});\n            question.render();\n            question.once('modal:yes', this.clear, this);\n        },\n        clear: function () { \n            console.log('view', 'Guest:clear', arguments);\n            this.model.destroy();\n        }\n    });\n    \n    return Guest;\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":4123}]],"length":4123}
